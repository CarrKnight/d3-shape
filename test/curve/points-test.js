var tape = require("tape"),
    shape = require("../../");

require("../pathEqual");

tape("line.curve(curvePoints())(data) generates the expected path", function(test) {
  var l = shape.line().curve(shape.curvePoints());
  test.equal(l([]), null);
  test.pathEqual(l([[0, 1]]), "M0.500000,1A0.500000,0.500000,0,1,1,-0.500000,1A0.500000,0.500000,0,1,1,0.500000,1");
  test.pathEqual(l([[0, 1], [1, 3]]), "M0.500000,1A0.500000,0.500000,0,1,1,-0.500000,1A0.500000,0.500000,0,1,1,0.500000,1M1.500000,3A0.500000,0.500000,0,1,1,0.500000,3A0.500000,0.500000,0,1,1,1.500000,3");
  test.pathEqual(l([[0, 1], [1, 3], [2, 1]]), "M0.500000,1A0.500000,0.500000,0,1,1,-0.500000,1A0.500000,0.500000,0,1,1,0.500000,1M1.500000,3A0.500000,0.500000,0,1,1,0.500000,3A0.500000,0.500000,0,1,1,1.500000,3M2.500000,1A0.500000,0.500000,0,1,1,1.500000,1A0.500000,0.500000,0,1,1,2.500000,1");
  test.pathEqual(l([[0, 1], [1, 3], [2, 1], [3, 3]]), "M0.500000,1A0.500000,0.500000,0,1,1,-0.500000,1A0.500000,0.500000,0,1,1,0.500000,1M1.500000,3A0.500000,0.500000,0,1,1,0.500000,3A0.500000,0.500000,0,1,1,1.500000,3M2.500000,1A0.500000,0.500000,0,1,1,1.500000,1A0.500000,0.500000,0,1,1,2.500000,1M3.500000,3A0.500000,0.500000,0,1,1,2.500000,3A0.500000,0.500000,0,1,1,3.500000,3");
  test.end();
});

tape("line.curve(curvePoints(2))(data) generates the expected path", function(test) {
  var l = shape.line().curve(shape.curvePoints(2));
  test.equal(l([]), null);
  test.pathEqual(l([[0, 1]]), "M2,1A2,2,0,1,1,-2,1A2,2,0,1,1,2,1");
  test.pathEqual(l([[0, 1], [1, 3]]), "M2,1A2,2,0,1,1,-2,1A2,2,0,1,1,2,1M3,3A2,2,0,1,1,-1,3A2,2,0,1,1,3,3");
  test.pathEqual(l([[0, 1], [1, 3], [2, 1]]), "M2,1A2,2,0,1,1,-2,1A2,2,0,1,1,2,1M3,3A2,2,0,1,1,-1,3A2,2,0,1,1,3,3M4,1A2,2,0,1,1,0,1A2,2,0,1,1,4,1");
  test.pathEqual(l([[0, 1], [1, 3], [2, 1], [3, 3]]), "M2,1A2,2,0,1,1,-2,1A2,2,0,1,1,2,1M3,3A2,2,0,1,1,-1,3A2,2,0,1,1,3,3M4,1A2,2,0,1,1,0,1A2,2,0,1,1,4,1M5,3A2,2,0,1,1,1,3A2,2,0,1,1,5,3");
  test.end();
});
